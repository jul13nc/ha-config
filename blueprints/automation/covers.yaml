blueprint:
  name: Cover Automation
  description: Handle the covers with different modes
  domain: automation

  input:
    cover:
      name: "🏠 Volet"
      description: >-
        Volet ou groupe de volets à automatiser
      selector:
        entity:
          filter:
            - domain:
                - cover
    time_up_early:
      name: "🔼 Heure min de lever"
      description: >-
        Heure la plus tôt à laquelle le volet s'ouvre si la luminosité le permet.
      default: "06:40:00"
      selector:
        time: {}
    time_up_early_non_workday:
      name: "🔼 Heure min de lever - Jour non travaillé"
      description: >-
        Heure la plus tôt à laquelle le volet s'ouvre si la luminosité le permet. Valable pour les jours non travaillés
      default: "09:30:00"
      selector:
        time: {}
    time_down_late:
      name: "🔻 Heure max de fermeture"
      description: >-
        Heure la plus tardive à laquelle les volets se ferment
      default: "20:35:00"
      selector:
        time: {}
    workday_sensor:
      name: "Capteur jour travaillé"
      default: binary_sensor.jourtravail
      selector:
        entity:
          domain:
            - binary_sensor
    sunny_outside_sensor:
      name: "Capteur jour leve extérieur"
      default: binary_sensor.jour_dehors
      selector:
        entity:
          domain:
            - binary_sensor
    facade_sun_sensor:
      name: Ensoleillement de la facade
      description: >-
        Capteur d'enseoleillement de la facade
      selector:
          entity:
            domain:
              - binary_sensor

trigger_variables:
  time_up_early: !input time_up_early
  time_up_early_non_workday: !input time_up_early_non_workday
  time_down_late: !input time_down_late
  workday_sensor: !input workday_sensor
  sunny_outside_sensor: !input sunny_outside_sensor

variables:
  time_up_today:  >-
    {% if is_state(workday_sensor, 'on') %}
      {{ time_up_early }}
    {% else %}
      {{ time_up_early_non_workday }}
    {% endif %}
  time_down_today:  !input time_down_late
  workday_sensor: !input workday_sensor


trigger:
  ## FACADE SUN EXPOSITION CHANGED
  - platform: state
    entity_id: !input facade_sun_sensor
    id: sun_exposition
  ## FAMILY PRESENCE CHANGED TO NOT HOME
  - platform: state
    entity_id:
      - group.famille
    to: not_home
    id: no-more-presence
    for:
      hours: 0
      minutes: 3
      seconds: 0
  ## FAMILY PRESENCE CHANGED TO HOME
  - platform: state
    entity_id:
      - group.famille
    to: home
    id: presence
  ## TIME TO OPEN COVERS
  - platform: template
    value_template: >-
      {% if is_state(workday_sensor, 'off') %}
        {{ is_state(sunny_outside_sensor, 'on') and now() >= today_at(time_up_early_non_workday) }}
      {% else %}
        {{ is_state(sunny_outside_sensor, 'on') and now() >= today_at(time_up_early) }}
      {% endif %}
    id: "time_up"
  ## TIME TO CLOSE COVERS
  - platform: template
    value_template: >-
        {{ is_state(sunny_outside_sensor, 'off') or now() >= today_at(time_down_late) }}
    id: "time_close"

## Confirm hour is between early and late 
## So covers dont move during the night
## And mode of covers is not manual

condition:
  - condition: and
    conditions:
      - condition: or
        conditions:
          - condition: trigger
            id: "time_close"
            alias: Triggered by closing time
          - condition: and
            conditions:
              - condition: template
                value_template: >-
                 {{ now() <= today_at(time_down_today) and now() >= today_at(time_up_today) }}
                alias: Within time management window
              - condition: state
                entity_id: !input sunny_outside_sensor
                state: "on"
                alias: Sunny outside
      - condition: not
        conditions:
          - condition: state
            entity_id: input_select.modevolets
            state: Manuel
            alias: Volets pas en gestion manuelle
        alias: Volets pas en gestion manuelle
action:
  - choose:
      - conditions:
          - condition: trigger
            id: "time_close"
        sequence: 
## IF EVENING CLOSE 
# If trgiggered by late hour, juste close the covers
            - service: cover.close_cover
              metadata: {}
              data: {}
              target:
                entity_id: !input cover
## END EVENING CLOSE 
      - conditions:
          - condition: state
            entity_id: input_select.modevolets
            state: Presence
            alias: Covers in presence mode
        sequence: 
## IF MODE IS PRESENCE
# Open covers if Sunny outside and Someone is Home
          - if:
              - condition: state
                entity_id: group.famille
                state: home
                alias: Somebody home
            then:
              - service: cover.open_cover
                metadata: {}
                data: {}
                target:
                  entity_id: !input cover
            else:
              - service: cover.close_cover
                metadata: {}
                data: {}
                target:
                  entity_id: !input cover
## END MODE PRESENCE
      - conditions:
          - condition: state
            entity_id: input_select.modevolets
            state: Ete
        sequence: 
## IF MODE IS ETE
# Open covers if Sunny outside and Someone is Home
          - if:
              - condition: state
                entity_id: !input facade_sun_sensor
                state: 'on'
                alias: Facade ensoleillée
            then:
              - service: cover.close_cover
                metadata: {}
                data: {}
                target:
                  entity_id: !input cover
            else:
              - if:
                  - condition: state
                    entity_id: group.famille
                    state: home
                    alias: Somebody home
                then:
                  - service: cover.open_cover
                    metadata: {}
                    data: {}
                    target:
                      entity_id: !input cover
                else:
                  - service: cover.close_cover
                    metadata: {}
                    data: {}
                    target:
                      entity_id: !input cover

## END MODE ETE
      - conditions:
          - condition: state
            entity_id: input_select.modevolets
            state: Hiver
        sequence: []
## ELSE IF MODE HIVER
## END MODE HIVER

## ELSE -> MODE MANUAL -> DO NOTHING
